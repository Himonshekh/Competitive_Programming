#include <bits/stdc++.h>
#define min_(x, y) (((x) < (y)) ? (x) : (y))
#define inf 999999999
int t,n,power[15],weap[16][16],ii,jj,cas=1,dp[1<<15 +1];
char ch[16];
int Set(int a,int pos){
    return (a|(1<<pos));
}
bool check(int a,int pos){
    return (a&(1<<pos));
}
int getId(char p_ch){
    return (p_ch-'0');
}
int bitmask(int count,int mask){
    if(count==n)return 0;
    if(dp[mask]!=-1){
        // printf("mask : %d = %d\n",mask,dp[mask]);
        return dp[mask];
    }
    int mn=inf,d;
    for(int i=0;i<n;i++){

        if(!check(mask,i)){
            for(int j=0;j<=n;j++){
                if(check(mask,j) && weap[j][i]){
                    d=power[i]/weap[j][i];
                    if(power[i]%weap[j][i])d++;
                    mn=min_(mn,d+bitmask(count+1,Set(mask,i)));
                }
            }
        }
    }
    dp[mask]=mn;
    return dp[mask];
}
void solve(){
    for(ii=0;ii<n;ii++){
        weap[n][ii]=1;
    }
    int mask=Set(0,n);
    memset(dp,-1,sizeof(dp));
    printf("Case %d: %d\n",cas++,bitmask(0,mask));
}
int main()
{
    scanf("%d",&t);
    while(t--) {
        scanf("%d",&n);
        for(ii=0;ii<n;ii++){
            scanf("%d",&power[ii]);
        }
        for(ii=0;ii<n;ii++){
            scanf("%s",ch);
            for(jj=0;jj<n;jj++){
                weap[ii][jj]=getId(ch[jj]);
            }
        }
        solve();
    }
    return 0;
}
